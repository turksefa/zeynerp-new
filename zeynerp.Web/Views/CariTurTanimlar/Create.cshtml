@{
    ViewData["LayoutTitle"] = "Cari Tür Oluştur";
}

<header class="page-header">
    <h2>@ViewData["LayoutTitle"]</h2>

    <div class="right-wrapper text-end">
        <ol class="breadcrumbs me-3">
            <li>
                <a asp-controller="Tanimlamalar" asp-action="Index"><span>Tanımlamalar</span></a>
            </li>

            <li>
                <a asp-controller="MuhasebeTanimlamalar" asp-action="Index"><span>Muhasebe Tanımlamalar</span></a>
            </li>

            <li>
                <a asp-action="Index"><span>Cari Tür Tanımlar</span></a>
            </li>

            <li><span class="text-light">Cari Tür Oluştur</span></li>
        </ol>
    </div>
</header>

<form id="form" class="ecommerce-form action-buttons-fixed" asp-action="Create" method="post">
    <div class="row">
        <div class="col">
            <section class="card card-modern">
                <div class="card-body">
                    <table class="table table-bordered table-striped mb-0" id="datatable-editable"
                        style="min-width: 550px;">
                        <thead>
                            <tr>
                                <th>Sıra</th>
                                <th>Cari Tür Adı</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </section>
        </div>
    </div>
    <div class="row action-buttons">
        <div class="col-12 col-md-auto">
            <button id="addToTable"
                class="btn btn-default btn-px-4 py-3 d-flex align-items-center font-weight-semibold line-height-1">
                <i class="fas fa-plus me-2"></i> Satır Ekle
            </button>
        </div>
        <div class="col-12 col-md-auto order-lg-1 mt-3 mt-md-0">
            <button type="submit"
                class="submit-button btn btn-primary btn-px-4 py-3 d-flex align-items-center font-weight-semibold line-height-1"
                data-loading-text="Loading...">
                <i class="bx bx-save text-4 me-2"></i> Kaydet
            </button>
        </div>
        <div class="col-12 col-md-auto ms-lg-auto px-md-0 mt-3 mt-md-0">
            <a asp-action="Index"
                class="cancel-button btn btn-light btn-px-4 py-3 border font-weight-semibold text-color-dark text-3">İptal</a>
        </div>
    </div>
</form>

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/datatables/media/css/dataTables.bootstrap5.css" />
    <link rel="stylesheet" href="~/vendor/pnotify/pnotify.custom.css" />
    <style>
        table th,
        table td {
            border: none !important;
        }
    </style>
}

@section VendorScripts {
    <script src="~/vendor/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/vendor/datatables/media/js/dataTables.bootstrap5.min.js"></script>
    <script src="~/vendor/pnotify/pnotify.custom.js"></script>
    <script src="~/vendor/jquery-validation/jquery.validate.js"></script>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#form").validate({
                errorPlacement: function (error, element) {
                },
                highlight: function (element) {
                    $(element).css("border", "1px solid red");
                },
                unhighlight: function (element) {
                    $(element).css("border", "");
                }
            });
        });
    </script>
    <script>
        (function ($) {
            "use strict";

            var EditableTable = {
                options: {
                    addButton: "#addToTable",
                    saveButton: "#saveAllRows",
                    table: "#datatable-editable",
                },

                initialize: function () {
                    this.setVars().build().events();
                    this.rowAdd();
                },

                setVars: function () {
                    this.$table = $(this.options.table);
                    this.$addButton = $(this.options.addButton);
                    return this;
                },

                build: function () {
                    this.datatable = this.$table.DataTable({
                        dom: '<"row"<"col-lg-6"><"col-lg-6">><"table-responsive"t>',
                        aoColumns: [{ targets: 0, width: '8%' }, null, { targets: 2, width: '5%' }],
                        ordering: false
                    });

                    window.dt = this.datatable;

                    return this;
                },

                events: function () {
                    var _self = this;

                    this.$table
                        .on("click", "a.cancel-row", function (e) {
                            e.preventDefault();
                            _self.rowCancel($(this).closest("tr"));
                        });

                    this.$addButton.on("click", function (e) {
                        e.preventDefault();
                        _self.rowAdd();
                    });

                    $(this.options.saveButton).on("click", function (e) {
                        e.preventDefault();
                        _self.saveAllRows();
                    });

                    return this;
                },

                rowAdd: function () {
                    var _self = this;

                    var actions, data, $row;

                    actions = [
                        '<a href="#" class="hidden on-editing cancel-row text-danger"><i class="fas fa-trash-can fa-xl"></i></a>',
                    ].join(" ");

                    data = this.datatable.row.add(["", "", actions]);
                    $row = this.datatable.row(data[0]).nodes().to$();
                    console.log(_self);
                    $row.addClass("adding").find("td:last").addClass("actions");

                    this.rowEdit($row);

                    this.datatable.order([0, "asc"]).draw();
                },

                saveAllRows: function () {
                    var _self = this;
                    this.$table.find("tbody tr").each(function () {
                        _self.rowSave($(this));
                    });
                },

                rowCancel: function ($row) {
                    var _self = this,
                        $actions,
                        i,
                        data;

                    if ($row.hasClass("adding")) {
                        this.rowRemove($row);
                    } else {
                        data = this.datatable.row($row.get(0)).data();
                        this.datatable.row($row.get(0)).data(data);

                        $actions = $row.find("td.actions");
                        if ($actions.get(0)) {
                            this.rowSetActionsDefault($row);
                        }

                        this.datatable.draw();
                    }
                },

                rowEdit: function ($row) {
                    var _self = this,
                        data,
                        rowIndex;

                    data = this.datatable.row($row.get(0)).data();

                    rowIndex = this.datatable.rows().count();

                    $row.children("td").each(function (i) {
                        var $this = $(this);

                        $this.addClass("text-center align-content-center");

                        if ($this.hasClass("actions")) {
                            _self.rowSetActionsEditing($row);
                        } else {
                            var inputType = "text";
                            var inputClass = "form-control input-block";
                            var content = data[i];
                            var inputName = "Model[" + (rowIndex - 1) + "].CariTurTanimAdi";

                            if (i === 0) {
                                inputType = "number";
                                inputName = "Model[" + (rowIndex - 1) + "].Sira";
                            } else if (i === 1) {
                                inputType = "text";
                                content = data[i];
                                $this.addClass("text-center align-content-center");
                            }

                            var inputElement =
                                '<input type="' +
                                inputType +
                                '" name="' +
                                inputName +
                                '" class="' +
                                inputClass +
                                '" value="' +
                                data[i] +
                                '" required />';

                            $this.html(inputElement);
                        }
                    });
                },

                rowSave: function ($row) {
                    var _self = this,
                        $actions,
                        values = [];

                    if ($row.hasClass("adding")) {
                        this.$addButton.removeAttr("disabled");
                        $row.removeClass("adding");
                    }

                    values = $row
                        .find("td")
                        .map(function (i) {
                            var $this = $(this);

                            if ($this.hasClass("actions")) {
                                _self.rowSetActionsDefault($row);
                                return _self.datatable.cell(this).data();
                            } else {
                                var $input = $this.find("input");
                                if ($input.length) {
                                    return $.trim($input.val());
                                } else {
                                    return $.trim($this.text());
                                }
                            }
                        })
                        .get();

                    this.datatable.row($row.get(0)).data(values);

                    $actions = $row.find("td.actions");
                    if ($actions.get(0)) {
                        this.rowSetActionsDefault($row);
                    }

                    this.datatable.draw();
                },

                rowRemove: function ($row) {
                    if ($row.hasClass("adding")) {
                        this.$addButton.removeAttr("disabled");
                    }

                    this.datatable.row($row.get(0)).remove().draw();
                },

                rowSetActionsEditing: function ($row) {
                    $row.find(".on-editing").removeClass("hidden");
                    $row.find(".on-default").addClass("hidden");
                },

                rowSetActionsDefault: function ($row) {
                    $row.find(".on-editing").addClass("hidden");
                    $row.find(".on-default").removeClass("hidden");
                },
            };

            $(function () {
                EditableTable.initialize();
            });
        }).apply(this, [jQuery]);

    </script>
    <script>
        var errorMessages = @Html.Raw(Json.Serialize(ViewData.ModelState.Values.SelectMany(v => v.Errors).Select(e =>
e.ErrorMessage).ToList()));
        if (errorMessages.length > 0) {
            var notice = new PNotify({
                text: errorMessages.join('<br>'),
                type: 'error',
                addclass: 'click-2-close',
                hide: true,
                buttons: {
                    closer: false,
                    sticker: false
                }
            });

            notice.get().click(function () {
                    notice.remove();
                });
            }
    </script>
}